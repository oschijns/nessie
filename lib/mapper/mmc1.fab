/*
 * Copyright (c) 2023, Patrick Bene
 * This file is distributed under the Boost Software License, Version 1.0.
 * See LICENSE_1_0.txt or https://www.boost.org/LICENSE_1_0.txt 
 */

///////////////////////////////////////////////////////////////////////////////
// Helper code for interfacing MMC1 ///////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// Registers:
// (To modify $8000, use the 'state' keyword.)
ct AA MMC1_CHR_0       = $A000
ct AA MMC1_CHR_1       = $C000

// Flags
ct U MMC1_MIRROR_1_LOWER = %00000
ct U MMC1_MIRROR_1_UPPER = %00001
ct U MMC1_MIRROR_V       = %00010
ct U MMC1_MIRROR_H       = %00011
ct U MMC1_CHR_BANK       = %10000

// Bits valid to modify using 'state':
ct U STATE_MASK = %10011

// Writes the CHR_0 register:
asm fn mmc1_set_chr_0(U value)
: employs
: +static
    default
        ldy &__mapper_detail
    label retry
        lda &value
        sta MMC1_CHR_0
        lsr
        sta MMC1_CHR_0
        lsr
        sta MMC1_CHR_0
        lsr
        sta MMC1_CHR_0
        lsr
        sta MMC1_CHR_0
        cpy &__mapper_detail
        beq done
        ldy &__mapper_detail
        jsr &__mapper_reset
        jmp retry
    label done
        rts

// Writes the CHR_0 register, the unsafe bank switch version:
asm fn mmc1_set_chr_0_unsafe(U value)
: employs
: +static
    default
        lda &value
        sta MMC1_CHR_0
        lsr
        sta MMC1_CHR_0
        lsr
        sta MMC1_CHR_0
        lsr
        sta MMC1_CHR_0
        lsr
        sta MMC1_CHR_0
        rts

// Writes the CHR_1 register:
asm fn mmc1_set_chr_1(U value)
: employs
: +static
    default
        ldy &__mapper_detail
    label retry
        lda &value
        sta MMC1_CHR_1
        lsr
        sta MMC1_CHR_1
        lsr
        sta MMC1_CHR_1
        lsr
        sta MMC1_CHR_1
        lsr
        sta MMC1_CHR_1
        cpy &__mapper_detail
        beq done
        ldy &__mapper_detail
        jsr &__mapper_reset
        jmp retry
    label done
        rts

// Writes the CHR_1 register, the unsafe bank switch version:
asm fn mmc1_set_chr_1_unsafe(U value)
: employs
: +static
        lda &value
        sta MMC1_CHR_1
        lsr
        sta MMC1_CHR_1
        lsr
        sta MMC1_CHR_1
        lsr
        sta MMC1_CHR_1
        lsr
        sta MMC1_CHR_1
        rts

